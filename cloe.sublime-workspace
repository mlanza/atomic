{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"au",
				"autopartial2"
			],
			[
				"aut",
				"autopartial1"
			],
			[
				"auto",
				"autopartial2"
			],
			[
				"pre",
				"prevSibling"
			],
			[
				"date",
				"date7"
			],
			[
				"a",
				"average"
			],
			[
				"E",
				"EmptyList"
			],
			[
				"ob",
				"observable3"
			],
			[
				"obs",
				"Observable"
			],
			[
				"mem",
				"memoize2"
			],
			[
				"rem",
				"removeEventListener"
			],
			[
				"IIn",
				"IIncusive"
			],
			[
				"chil",
				"children"
			],
			[
				"IR",
				"IKVReduce"
			],
			[
				"IA",
				"IAssociative"
			],
			[
				"mi",
				"millisecond"
			],
			[
				"red",
				"reducekv"
			],
			[
				"mer",
				"mergeWith"
			],
			[
				"getMi",
				"getMilliseconds"
			],
			[
				"mill",
				"millisecondInt"
			],
			[
				"min",
				"minuteInt"
			],
			[
				"ISe",
				"ISeqable"
			],
			[
				"emp",
				"emptyable"
			],
			[
				"EM",
				"EMPTY_RANGE"
			],
			[
				"dis",
				"disableds"
			],
			[
				"bac",
				"background\tproperty"
			],
			[
				"cre",
				"createChecklist"
			],
			[
				"page",
				"pageItemId"
			],
			[
				"Wiki",
				"Wiki_x0020_PageId"
			],
			[
				"extr",
				"extractModel1"
			],
			[
				"stat",
				"statuses"
			],
			[
				"comp",
				"component5"
			],
			[
				"stri",
				"stringify"
			],
			[
				"com",
				"component5"
			],
			[
				"backg",
				"background-color\tproperty"
			],
			[
				"extra",
				"extractModel"
			],
			[
				"ex",
				"extractModel2"
			],
			[
				"ext",
				"extractModel1"
			],
			[
				"font",
				"font-style\tproperty"
			],
			[
				"IH",
				"IHierarchy"
			],
			[
				"con",
				"contents2"
			],
			[
				"html",
				"html2"
			],
			[
				"spl",
				"splice4"
			],
			[
				"spli",
				"splice4"
			],
			[
				"ra",
				"race3"
			],
			[
				"IE",
				"IEmptyableCollection"
			],
			[
				"isA",
				"isAssociative"
			],
			[
				"gr",
				"groupBy3"
			],
			[
				"in",
				"index3"
			],
			[
				"ind",
				"index4"
			],
			[
				"IRe",
				"IReduce"
			],
			[
				"id",
				"identity"
			],
			[
				"map",
				"mapVals3"
			],
			[
				"re",
				"reducekv"
			],
			[
				"II",
				"IInclusive"
			],
			[
				"next",
				"nextSibling"
			],
			[
				"tra",
				"transpose"
			],
			[
				"remove",
				"removeAttribute"
			],
			[
				"elem",
				"elementKeys"
			],
			[
				"isObj",
				"isObjectSelection"
			],
			[
				"Class",
				"Classification"
			],
			[
				"chi",
				"childNodes"
			],
			[
				"cont",
				"contents"
			],
			[
				"protocolL",
				"protocollookuperror"
			],
			[
				"Pro",
				"ProtocolLookupError"
			],
			[
				"const",
				"constructor"
			],
			[
				"get",
				"getPrototypeOf"
			],
			[
				"cl",
				"classification"
			],
			[
				"can",
				"candidates"
			],
			[
				"ca",
				"candidates"
			],
			[
				"imp",
				"implement"
			],
			[
				"ma",
				"matches"
			],
			[
				"mat",
				"matches1"
			],
			[
				"sel",
				"selector"
			],
			[
				"cons",
				"construct"
			],
			[
				"pare",
				"parentNode"
			],
			[
				"mpa",
				"mapping"
			],
			[
				"m",
				"mapcatting"
			],
			[
				"is",
				"ISeqable"
			],
			[
				"nex",
				"nextSibling"
			],
			[
				"conc",
				"concatenates"
			],
			[
				"trans",
				"transducers"
			],
			[
				"ISeq",
				"ISeqable"
			],
			[
				"desc",
				"descendants"
			],
			[
				"dist",
				"distinct"
			],
			[
				"isDi",
				"isDistinct1"
			],
			[
				"it",
				"iterable"
			],
			[
				"pro",
				"provideBehavior"
			],
			[
				"asp",
				"aspectables"
			],
			[
				"ap",
				"aspectable"
			],
			[
				"aspect",
				"aspectable"
			],
			[
				"provi",
				"provideConstructor"
			],
			[
				"aspe",
				"aspectablize"
			],
			[
				"Pipe",
				"Pipeline"
			],
			[
				"pip",
				"pipeline"
			],
			[
				"appen",
				"appendContent"
			],
			[
				"app",
				"appendContent"
			],
			[
				"appe",
				"appendChild"
			],
			[
				"sig",
				"signal3"
			],
			[
				"init",
				"initialized"
			],
			[
				"br",
				"branch4"
			],
			[
				"bra",
				"branch3"
			],
			[
				"doti",
				"dotimes2"
			],
			[
				"te",
				"template2"
			],
			[
				"str",
				"strfmtN"
			],
			[
				"filt",
				"filtera2"
			],
			[
				"tr",
				"transduce"
			],
			[
				"ever",
				"everyPair2"
			],
			[
				"eve",
				"everyPair2"
			],
			[
				"take",
				"takeLast2"
			],
			[
				"part",
				"partial"
			],
			[
				"inte",
				"interleaved"
			],
			[
				"show",
				"showable"
			],
			[
				"toA",
				"toArray2"
			],
			[
				"redu",
				"reduceBehavior"
			],
			[
				"body",
				"bodySelector"
			],
			[
				"style",
				"styleFileName"
			],
			[
				"fill",
				"fillViewport"
			],
			[
				"bod",
				"bodyLoaded"
			],
			[
				"rest",
				"restoreLegacyValues"
			],
			[
				"from",
				"fromLocalDate"
			],
			[
				"ord",
				"orderBy"
			],
			[
				"or",
				"origin"
			],
			[
				"start",
				"startsWith"
			],
			[
				"cred",
				"credentials"
			],
			[
				"requisition",
				"requisitionId"
			],
			[
				"proto",
				"prototype"
			],
			[
				"ren",
				"renderLookup"
			]
		]
	},
	"buffers":
	[
		{
			"file": "test/cloe.js",
			"settings":
			{
				"buffer_size": 18209,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 259 files for \"chain\" (case sensitive, whole word)\n\nD:\\cloe\\NOTES.md:\n   18: * In some cases, when dealing with collections (Seqs), we cannont know what concrete types it will contain.  HTMLDivElement and HTMLSpanElement are predictable HTML elements; however, developers can define their own custom elements via Web Components.  Unless the behavior/protocols for those components are defined, the api will break when it encounters these custom elements.  Protocol resolution, for performance, looks directly to the constructor and not the full inheritance chain because protocols are internally implemented using WeakMaps.  Traversing the inheritance chain on every protocol lookup would be too expensive.  That is why the dom traversal api assumes all items within the seq are elements.\n\nD:\\cloe\\src\\benchmarks.js:\n    1: import {overload, identity, milliseconds, mapa, partial, range, pipe, chain, juxtm, average, most, least, sort, asc} from \"./core\";\n    5:   return time2(chain, f);\n    8: function time2(chain, f){\n   10:   return chain(f(), function(){\n   16: function time3(chain, f, n){\n   17:   return chain(mapa(function(){\n   18:     return time2(chain, f);\n   31: function benchmark4(chain, fs, n, by){\n   35:     return IAssociative.assoc(memo, key, time(chain, f, n));\n   39: function benchmark3(chain, fs, n){\n   40:   return benchmark4(chain, fs, n, function(result){\n   46:   return benchmark3(chain, fs, n);\n   50:   return benchmark3(chain, fs, 50);\n\nD:\\cloe\\src\\core.js:\n    2: import {multiple, reducing, sort, chain, set, flip, realized, comp, isNumber} from \"./core/types\";\n  124: export const request = _.chain(_.request,\n\nD:\\cloe\\src\\core\\types\\pipeline\\concrete.js:\n  143: export const chain  = chained(identity);\n\nD:\\cloe\\test\\cloe.js:\n  308:   //assert.ok(_.chain({ace: 1, king: 2, queen: 3}, matches({ace: 1, king: 2})));\n\n19 matches across 5 files\n",
			"settings":
			{
				"buffer_size": 1890,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/core/types/pipeline/concrete.js",
			"settings":
			{
				"buffer_size": 3948,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/dom.js",
			"settings":
			{
				"buffer_size": 4310,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/core/types/lazyseq/behave.js",
			"settings":
			{
				"buffer_size": 3400,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 203.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"csv",
				"Set Syntax: Advanced CSV"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: isnt",
				"Package Control: Install Package"
			],
			[
				"Package Control: d",
				"Package Control: Discover Packages"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"Package Control: ins\t",
				"Package Control: Install Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"html",
				"HTMLBeautify"
			],
			[
				"Package Control: insta",
				"Package Control: Install Package"
			],
			[
				"prett",
				"HTMLPrettify"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 165.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/cloe",
		"/D/cloe/src",
		"/D/cloe/src/core",
		"/D/cloe/src/core/types",
		"/D/cloe/src/core/types/lazyseq",
		"/D/cloe/src/core/types/pipeline",
		"/D/cloe/test"
	],
	"file_history":
	[
		"/D/cloe/src/benchmarks.js",
		"/D/cloe/src/core.js",
		"/D/cloe/src/core/api/contents.js",
		"/D/cloe/src/core/core.js",
		"/D/cloe/.babelrc",
		"/D/cloe/rollup.config.js",
		"/D/cloe/package.json",
		"/D/cloe/dist/tests.js",
		"/D/cloe/cloe.sublime-project",
		"/D/cloe/test/cloe2.js",
		"/D/cloe/src/transducers.js",
		"/D/cloe/src/core/protocols/ireduce.js",
		"/D/cloe/src/core-pointfree.js",
		"/D/cloe/src/core/types/documentfragment/behave.js",
		"/D/cloe/src/core/types/documentfragment.js",
		"/D/cloe/src/core/types.js",
		"/D/cloe/src/core/types/documentfragment/construct.js",
		"/D/cloe/src/dom.js",
		"/D/cloe/src/dom-pointfree.js",
		"/D/cloe/src/core/api/reduce.js",
		"/D/cloe/src/core/api/predicates.js",
		"/D/cloe/src/core/types/element/behave.js",
		"/D/cloe/test/tacit.js",
		"/D/cloe/src/core/protocols/ihierarchy.js",
		"/D/cloe/test/cloe.js",
		"/D/cloe/src/core/types/pipeline/concrete.js",
		"/D/cloe/src/signals.js",
		"/D/cloe/src/clojure.js",
		"/D/cloe/src/core/types/date/construct.js",
		"/D/cloe/src/core/types/hash/construct.js",
		"/D/cloe/src/core/types/set/construct.js",
		"/D/cloe/src/main-pointfree.js",
		"/D/cloe/src/types/object/concrete.js",
		"/D/cloe/src/types/observable/behave.js",
		"/D/cloe/src/types/observable/construct.js",
		"/D/cloe/src/types/lazyseq/concrete.js",
		"/D/cloe/src/main.js",
		"/D/cloe/src/types/date/concrete.js",
		"/D/cloe/src/types/number/concrete.js",
		"/D/cloe/src/types/date/construct.js",
		"/D/cloe/src/types/string/concrete.js",
		"/D/cloe/src/api/predicates.js",
		"/D/cloe/src/types/list/construct.js",
		"/D/cloe/src/types/function/concrete.js",
		"/D/cloe/src/types/reduced/concrete.js",
		"/D/cloe/src/api/associatives.js",
		"/D/cloe/src/types/date/behave.js",
		"/D/cloe/src/pointfree/main.js",
		"/D/cloe/src/types/array/behave.js",
		"/D/cloe/src/types/pipeline/concrete.js",
		"/D/cloe/src/types/element/behave.js",
		"/D/cloe/src/types/multidict/behave.js",
		"/D/cloe/src/api/swap.js",
		"/D/cloe/src/api/lookup.js",
		"/D/cloe/src/api/encode.js",
		"/D/cloe/src/api/decode.js",
		"/D/cloe/src/api/contents.js",
		"/D/cloe/src/types/multidict/construct.js",
		"/D/cloe/src/api/merge.js",
		"/D/cloe/src/api/reduce.js",
		"/D/cloe/src/api/reducekv.js",
		"/D/cloe/src/api/associative.js",
		"/D/cloe/src/api/patch.js",
		"/D/cloe/src/api.js",
		"/D/cloe/src/types/period/construct.js",
		"/D/cloe/src/types/years/behave.js",
		"/D/cloe/src/types/months/behave.js",
		"/D/cloe/src/multimethods/positionally.js",
		"/D/cloe/src/types/range.js",
		"/D/cloe/src/multimethods/matches.js",
		"/D/cloe/src/types/period.js",
		"/D/cloe/src/multimethods/coerce.js",
		"/D/cloe/src/api/mergeWith.js",
		"/D/cloe/src/types/array/concrete.js",
		"/D/cloe/src/types/array.js",
		"/D/cloe/src/types/array/construct.js",
		"/D/cloe/src/types/associativesubset/behave.js",
		"/D/cloe/src/types/duration/behave.js",
		"/D/cloe/src/types/record/behave.js",
		"/D/cloe/src/types/concatenated/behave.js",
		"/D/cloe/src/pointfree.js",
		"/D/cloe/src/types/nodelist/behave.js",
		"/D/cloe/src/types/revseq/behave.js",
		"/D/cloe/src/types/string/behave.js",
		"/D/cloe/src/types/object/behave.js",
		"/D/cloe/src/types/lazyseq/behave.js",
		"/D/cloe/src/types/indexedseq/behave.js",
		"/D/cloe/src/types.js",
		"/D/cloe/src/types/associativesubset/construct.js",
		"/D/cloe/src/predicates.js",
		"/D/cloe/src/types/associativesubset.js",
		"/D/cloe/src/types/protocol/concrete.js",
		"/D/cloe/src/decode.js",
		"/D/cloe/src/types/nil/behave.js",
		"/D/cloe/src/protocols/iyank.js",
		"/D/cloe/src/multimethods.js",
		"/D/cloe/src/types/protocol/construct.js",
		"/D/cloe/src/multimethods/amalgam.js",
		"/D/cloe/src/protocols.js",
		"/D/cloe/src/protocols/itranspose.js",
		"/D/cloe/src/styled.js",
		"/D/cloe/src/associative.js",
		"/D/cloe/src/merge.js",
		"/D/cloe/src/types/date.js",
		"/D/cloe/src/associatives.js",
		"/D/cloe/src/mergeWith.js",
		"/D/cloe/src/types/when/construct.js",
		"/D/cloe/src/patch.js",
		"/D/cloe/src/encode.js",
		"/D/cloe/src/protocols/iassociative.js",
		"/D/cloe/src/reducekv.js",
		"/D/cloe/src/reduce.js",
		"/D/cloe/src/swap.js",
		"/D/cloe/src/contents.js",
		"/D/cloe/src/protocols/ilookup.js",
		"/D/cloe/src/lookup.js",
		"/D/cloe/src/types/when/behave.js",
		"/D/cloe/src/protocols/ibounds.js",
		"/D/cloe/src/types/range/behave.js",
		"/D/cloe/index.html",
		"/D/cloe/src/types/range/construct.js",
		"/D/cloe/src/types/number/behave.js",
		"/D/cloe/src/types/function/construct.js",
		"/D/cloe/src/types/object/construct.js",
		"/D/cloe/src/types/concatenated/construct.js",
		"/D/cloe/src/types/emptylist.js",
		"/D/cloe/src/types/emptylist/construct.js",
		"/D/cloe/src/types/emptylist/behave.js"
	],
	"find":
	{
		"height": 53.0
	},
	"find_in_files":
	{
		"height": 135.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"chain",
			"overload",
			"splice",
			"subj",
			"contents",
			"IContent",
			"contents",
			"els",
			"multiple",
			"t",
			"transducers",
			"s",
			"p",
			"isReduc",
			"p",
			"dedupe",
			"stooges",
			"reduce",
			"mapa",
			"tag",
			"sn",
			"fork",
			"parentNode",
			"isString",
			"conj",
			"transpose",
			"parent",
			"children",
			"contents",
			"parentNode",
			"T",
			"pipeline",
			"transducers",
			"subj",
			"second",
			"join",
			"isIdentical",
			"observable",
			"reducing",
			"rever",
			"reversed",
			"includes",
			"step",
			"deref",
			"add",
			"inc",
			"plus",
			"scan",
			"export function scan(pred, xs){\n  if (!ISeqable.seq(xs)) return true;\n  let head = ISeq.first(xs),\n      coll = INext.next(xs);\n  while (coll){\n    if (pred(head, ISeq.first(coll))){\n      head = ISeq.first(coll);\n      coll = INext.next(coll);\n    } else {\n      return false;\n    }\n  }\n  return true;\n}\n",
			"scan",
			"maxKey",
			"everypred",
			"everyPred",
			"interleave",
			"selectKeys",
			"obj",
			"sort",
			"notSome",
			"dropLast",
			"takeWhile",
			"concat",
			"reducing",
			"groupInto",
			"cycle",
			"a",
			"pred",
			"T",
			"t",
			"satisfies",
			"reduce",
			"reduced",
			"compare",
			"dom",
			"/core",
			"d",
			"T",
			"swap",
			"attrs"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"_"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test/cloe.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18209,
						"regions":
						{
						},
						"selection":
						[
							[
								492,
								492
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1890,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										567,
										572
									],
									[
										662,
										667
									],
									[
										904,
										909
									],
									[
										988,
										993
									],
									[
										1021,
										1026
									],
									[
										1048,
										1053
									],
									[
										1093,
										1098
									],
									[
										1123,
										1128
									],
									[
										1170,
										1175
									],
									[
										1208,
										1213
									],
									[
										1280,
										1285
									],
									[
										1322,
										1327
									],
									[
										1364,
										1369
									],
									[
										1423,
										1428
									],
									[
										1465,
										1470
									],
									[
										1544,
										1549
									],
									[
										1641,
										1646
									],
									[
										1724,
										1729
									],
									[
										1798,
										1803
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										996,
										997
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										987,
										988
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content"
							],
							"detect_indentation": false,
							"git_gutter_is_enabled": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/core/types/pipeline/concrete.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3948,
						"regions":
						{
						},
						"selection":
						[
							[
								3140,
								3140
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2093.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/dom.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4310,
						"regions":
						{
						},
						"selection":
						[
							[
								3947,
								3947
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 313.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/core/types/lazyseq/behave.js",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 3400,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"apply_syntax_touched": true,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content"
							],
							"git_gutter_is_enabled": true,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1833.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 53.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "cloe.sublime-project",
	"replace":
	{
		"height": 94.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\mlanza\\Documents\\Source\\SharePoint\\sharepoint.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 394.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
